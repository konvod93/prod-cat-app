import { products, categoriesMap } from '../../data/mockProducts';
import { Link } from "react-router-dom";
import { useState, useEffect } from 'react';

const Home = () => {
  const [randomCategories, setRandomCategories] = useState([]);

  useEffect(() => {
    // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    const uniqueCategories = [...new Set(products.map(p => p.category))];
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ –º–∞—Å—Å–∏–≤–∞
    const getRandomCategories = (categories, count = 3) => {
      const shuffled = [...categories].sort(() => 0.5 - Math.random());
      return shuffled.slice(0, count);
    };
    
    // –ü–æ–ª—É—á–∞–µ–º 3 —Å–ª—É—á–∞–π–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const selected = getRandomCategories(uniqueCategories, 3);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const categoriesData = selected.map(categoryName => {
      const categoryInfo = categoriesMap[categoryName];
      const productsInCategory = products.filter(p => p.category === categoryName);
      
      return {
        name: categoryName,
        icon: categoryInfo?.icon || 'üì¶',
        color: categoryInfo?.color || 'from-gray-500 to-gray-600',
        productsCount: productsInCategory.length,
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è
        description: `–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è ${productsInCategory.length} —Ç–æ–≤–∞—Ä–æ–≤ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.`
      };
    });
    
    setRandomCategories(categoriesData);
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  const refreshCategories = () => {
    const uniqueCategories = [...new Set(products.map(p => p.category))];
    const shuffled = [...uniqueCategories].sort(() => 0.5 - Math.random());
    const selected = shuffled.slice(0, 3);
    
    const categoriesData = selected.map(categoryName => {
      const categoryInfo = categoriesMap[categoryName];
      const productsInCategory = products.filter(p => p.category === categoryName);
      
      return {
        name: categoryName,
        icon: categoryInfo?.icon || 'üì¶',
        color: categoryInfo?.color || 'from-gray-500 to-gray-600',
        productsCount: productsInCategory.length,
        description: `–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è ${productsInCategory.length} —Ç–æ–≤–∞—Ä–æ–≤ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.`
      };
    });
    
    setRandomCategories(categoriesData);
  };

  return (
    <div className="bg-gray-50 text-gray-800">
      {/* Hero Section */}
      <section className="bg-gradient-to-r from-blue-500 to-indigo-600 text-white py-16 px-6 text-center">
        <h1 className="text-5xl font-extrabold mb-4">
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω!
        </h1>
        <p className="text-xl mb-6">
          –¢–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç. –¶–µ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–¥—É—é—Ç.
        </p>
        <Link 
          to="/Products"
          className="inline-block bg-white text-blue-600 font-semibold px-6 py-3 rounded-full hover:bg-gray-100 transition"
        >
          –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–∞–º
        </Link>
      </section>

      {/* About Section */}
      <section className="py-12 px-6 max-w-4xl mx-auto text-center">
        <h2 className="text-3xl font-bold mb-4">üõí –ö—Ç–æ –º—ã?</h2>
        <p className="text-lg text-gray-700">
          –ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –≤–µ—Ä–∏—Ç, —á—Ç–æ –ø–æ–∫—É–ø–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–æ—Å—Ç—ã–º–∏,
          –ø—Ä–∏—è—Ç–Ω—ã–º–∏ –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏. –£ –Ω–∞—Å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å—ë ‚Äî –æ—Ç –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω—É–∂–¥ –¥–æ
          —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –Ω–∞—Ö–æ–¥–æ–∫. <Link to="/About" className="text-blue-600 font-medium">–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ...</Link>
        </p>
      </section>

      {/* Categories Section */}
      <section className="py-12 px-6 bg-white">
        <div className="flex justify-between items-center mb-8 max-w-5xl mx-auto">
          <h2 className="text-3xl font-bold">
            üì¶ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
          </h2>
          <button
            onClick={refreshCategories}
            className="text-sm bg-blue-100 text-blue-600 px-4 py-2 rounded-lg hover:bg-blue-200 transition"
            title="–û–±–Ω–æ–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
          >
            üîÑ –û–±–Ω–æ–≤–∏—Ç—å
          </button>
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-5xl mx-auto">
          {randomCategories.map((category, index) => (
            <Link
              key={`${category.name}-${index}`}
              to={`/Products?category=${category.name}`}
              className="group block"
            >
              <div className="bg-gradient-to-br from-white to-gray-50 p-6 rounded-xl shadow-md hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 border border-gray-100">
                {/* –ò–∫–æ–Ω–∫–∞ –∏ —Å—á–µ—Ç—á–∏–∫ */}
                <div className="flex items-center justify-between mb-4">
                  <span className="text-4xl group-hover:scale-110 transition-transform duration-300">
                    {category.icon}
                  </span>
                  <span className="text-sm bg-gray-100 text-gray-600 px-3 py-1 rounded-full">
                    {category.productsCount} —Ç–æ–≤–∞—Ä–æ–≤
                  </span>
                </div>
                
                {/* –ù–∞–∑–≤–∞–Ω–∏–µ */}
                <h3 className="text-xl font-semibold mb-3 group-hover:text-blue-600 transition-colors">
                  {category.name}
                </h3>
                
                {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
                <p className="text-gray-600 mb-4">
                  {category.description}
                </p>
                
                {/* –ö–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è */}
                <div className="flex items-center text-blue-600 font-medium">
                  <span>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã</span>
                  <span className="ml-2 group-hover:translate-x-1 transition-transform duration-300">‚Üí</span>
                </div>
              </div>
            </Link>
          ))}
        </div>

        {/* –°—Å—ã–ª–∫–∞ –Ω–∞ –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
        <div className="text-center mt-8">
          <Link
            to="/Categories"
            className="inline-flex items-center text-blue-600 font-medium hover:text-blue-700 transition-colors"
          >
            –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            <span className="ml-2">‚Üí</span>
          </Link>
        </div>
      </section>

      {/* Benefits Section */}
      <section className="py-12 px-6 bg-gray-100">
        <h2 className="text-3xl font-bold text-center mb-8">
          üéØ –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å?
        </h2>
        <ul className="max-w-3xl mx-auto space-y-4 text-lg text-gray-700">
          <li>‚úÖ –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–π —Å—Ç—Ä–∞–Ω–µ</li>
          <li>‚úÖ –ù–∞–¥—ë–∂–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤</li>
          <li>‚úÖ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –∞–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏</li>
          <li>‚úÖ –£–¥–æ–±–Ω–∞—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞</li>
        </ul>
      </section>

      {/* Contact Section */}
      <section className="py-12 px-6 text-center">
        <h2 className="text-3xl font-bold mb-4">üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏</h2>
        <p className="text-lg text-gray-700 mb-6">
          –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã? –ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª{" "}
          <span className="text-blue-600 font-medium">"–ö–æ–Ω—Ç–∞–∫—Ç—ã"</span>.
        </p>
        <Link
          to="/Contacts"
          className="inline-block bg-blue-600 text-white px-6 py-3 rounded-full hover:bg-blue-700 transition"
        >
          –°–≤—è–∑–∞—Ç—å—Å—è
        </Link>
      </section>      
    </div>
  );
};

export default Home;